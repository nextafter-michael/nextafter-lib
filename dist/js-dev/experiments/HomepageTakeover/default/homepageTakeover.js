var main;(()=>{"use strict";var __webpack_modules__={"./src/classes/HomepageTakeover.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass HomepageTakeoverButton {\r\n  static defaultOptions = {\r\n    buttonTextHTMLHTML: 'Go Back',\r\n    href: 'javascript:void(0)',\r\n    design: {\r\n      top: '1rem',\r\n      left: '1rem',\r\n      color: '#fff',\r\n      backgroundColor: '#007bff',\r\n      border: 'none',\r\n      borderRadius: '1rem',\r\n      padding: '0.5rem 1rem',\r\n    }\r\n  }\r\n  constructor (options = {}) {\r\n    options = {\r\n      ...HomepageTakeoverButton.defaultOptions,\r\n      ...options\r\n    };\r\n    const designOptions = {\r\n      ...HomepageTakeoverButton.defaultOptions.design,\r\n      ...options.design\r\n    };\r\n    delete options.design;\r\n\r\n    const container = document.createElement('div');\r\n    container.classList.add('homepage-takeover-button-container');\r\n    container.style.setProperty('position', 'fixed');\r\n    container.style.setProperty('z-index', '65536');\r\n    container.style.setProperty('top', 0);\r\n    container.style.setProperty('left', 0);\r\n    container.style.setProperty('padding-top', designOptions.top);\r\n    container.style.setProperty('padding-left', designOptions.left);\r\n    container.style.setProperty('max-width', '100%');\r\n\r\n    const link = document.createElement('a');\r\n    link.style.setProperty('display', 'contents');\r\n    link.href = options.href;\r\n    if (link.href === 'javascript:void(0)') {\r\n      link.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        if (window.location.searchParams.has('fromUrl')) {\r\n          const fromUrl = window.location.searchParams.get('fromUrl');\r\n          window.location.href = fromUrl;\r\n        } else if (window.history.length > 1) {\r\n          window.history.back();\r\n        } else {\r\n          window.location.href = '/'; // Fallback to homepage if no history\r\n        }\r\n      });\r\n    }\r\n\r\n    const button = document.createElement('button');\r\n    button.classList.add('homepage-takeover-button');\r\n    button.innerHTML = options.buttonTextHTML;\r\n    Object.entries(designOptions)\r\n      .filter(([key]) => key !== 'top' && key !== 'left')\r\n      .forEach(([key, value]) => {\r\n        button.style.setProperty(key, value);\r\n      });\r\n\r\n    container.appendChild(link);\r\n    link.appendChild(button);\r\n    document.body.appendChild(container);\r\n\r\n    this.element = button;\r\n    return this;\r\n  }\r\n}\r\n\r\nclass HomepageTakeover {\r\n  static defaultOptions = {\r\n    homepageUrl: null, // Required: The URL of the homepage\r\n    destinationUrl: null, // Required: The URL to redirect to\r\n    srcParamValue: 'redirect', // Value for the 'src' query parameter\r\n    redirectCooldownDays: 7, // Cooldown period in days\r\n    cookieName: \"homepageTakeoverRedirected\", // Name of the cookie to store the redirect timestamp\r\n    buttonTextHTML: \"Go Back\", // Text for the button\r\n    buttonDesign: HomepageTakeoverButton.defaultOptions.design // Design options for the button\r\n  }\r\n  static executeRedirect = function (destinationUrl) {\r\n    if (!destinationUrl)\r\n      return console.warn(\"No destination URL provided.\");\r\n    if (destinationUrl instanceof URL) {\r\n      window.location.assign(destinationUrl.href);\r\n    } else if (typeof destinationUrl === 'string') {\r\n      if (destinationUrl.startsWith('javascript:')) {\r\n        // do nothing\r\n      } else {\r\n        window.location.assign(destinationUrl);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * \r\n   * @param {*} options \r\n   * @param {string} options.homepageUrl - The URL of the homepage (required)\r\n   * @param {string} options.destinationUrl - The URL to redirect to (required)\r\n   * @param {string} options.srcParamValue - The value for the 'src' query parameter (default: 'redirect')\r\n   * @param {number} options.redirectCooldownDays - The cooldown period in days (default: 7)\r\n   * @param {string} options.cookieName - The name of the cookie to store the redirect timestamp (default: \"homepageTakeoverRedirected\")\r\n   * @param {string} options.buttonTextHTML - The text for the button (default: \"Go Back\")\r\n   * @returns \r\n   */\r\n  constructor (options = {}) {\r\n    this.options = { ...HomepageTakeover.defaultOptions, ...options };\r\n\r\n    if (!this.options.destinationUrl)\r\n      return console.warn('HomepageTakeover: destinationUrl is required.');\r\n    \r\n    const currentUrl = new URL(window.location.href);\r\n    const normalizePathname = (url) => url.pathname.replace(/\\/+$/, ''); // Remove trailing slashes\r\n    const matchesHomepage = (url) => {\r\n      const homepageUrl = new URL(this.options.homepageUrl, window.location.origin); // Ensure it's an absolute URL\r\n      return normalizePathname(url) === normalizePathname(homepageUrl);\r\n    };\r\n    const matchesDestination = (url) => {\r\n      const destinationUrl = new URL(this.options.destinationUrl, window.location.origin); // Ensure it's an absolute URL\r\n      return normalizePathname(url) === normalizePathname(destinationUrl);\r\n    };\r\n    const isFromRedirect = (url) => {\r\n      url = url instanceof URL ? url : new URL(url, window.location.origin); // Ensure it's an absolute URL\r\n      const fromUrlParam = url.searchParams.get('fromUrl');\r\n      return fromUrlParam && decodeURIComponent(fromUrlParam) === this.options.homepageUrl;\r\n    };\r\n    \r\n    if (matchesHomepage(currentUrl)) {\r\n      return this.handleHomepage(), true;\r\n    } else if (matchesDestination(currentUrl) && isFromRedirect(currentUrl)) {\r\n      return this.handleDestinationPage(), true;\r\n    } else if (matchesDestination(currentUrl)) {\r\n      // This is the destination page, but not from a redirect. Do nothing.\r\n      return false;\r\n    } else {\r\n      // This is neither the homepage nor the destination page. Do nothing.\r\n      return false;\r\n    }\r\n  }\r\n  /**\r\n   * Code that runs on the homepage or source page. This is where the redirect happens if needed.\r\n   */\r\n  handleHomepage () {\r\n    const currentUrl = new URL(window.location.href);\r\n    const queryParams = currentUrl.searchParams;\r\n    const fromUrlParam = queryParams.get('fromUrl');\r\n\r\n    if (fromUrlParam) {\r\n      const decodedFromUrl = decodeURIComponent(fromUrlParam);\r\n    } else {\r\n      // This is the source page. Check if we should redirect.\r\n      const lastRedirectTimestamp = localStorage.getItem(this.options.cookieName);\r\n      const now = new Date().getTime();\r\n      const cooldownMilliseconds = this.options.redirectCooldownDays * 24 * 60 * 60 * 1000;\r\n\r\n      if (!lastRedirectTimestamp || (now - parseInt(lastRedirectTimestamp, 10)) > cooldownMilliseconds) {\r\n        // Redirect is needed\r\n        const destination = new URL(this.options.destinationUrl, window.location.origin); // Ensure it's an absolute URL\r\n\r\n        // Carry over existing UTM parameters\r\n        ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content'].forEach((utm) => {\r\n          if (queryParams.has(utm) && !destination.searchParams.has(utm)) {\r\n            destination.searchParams.set(utm, queryParams.get(utm));\r\n          }\r\n        });\r\n\r\n        // Add 'src' and 'fromUrl' parameters\r\n        this.options.srcParamValue && destination.searchParams.set('src', this.options.srcParamValue);\r\n        destination.searchParams.set('fromUrl', encodeURIComponent(currentUrl.href));\r\n\r\n        HomepageTakeover.executeRedirect(destination.href);\r\n        localStorage.setItem(this.options.cookieName, now.toString());\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Code that runs on the destination page. This is where the button is added.\r\n   */\r\n  handleDestinationPage () {\r\n    const currentUrl = new URL(window.location.href);\r\n    const queryParams = currentUrl.searchParams;\r\n    const fromUrlParam = queryParams.get('fromUrl');\r\n    if (!fromUrlParam)\r\n      return console.warn('No fromUrl parameter found in the URL.');\r\n\r\n    const decodedFromUrl = decodeURIComponent(fromUrlParam);\r\n    new HomepageTakeoverButton({\r\n      buttonTextHTML: this.options.buttonTextHTML,\r\n      href: decodedFromUrl,\r\n      design: this.options.buttonDesign,\r\n    });\r\n  }\r\n}\r\n\r\n/*new HomepageTakeover({\r\n  homepageUrl: 'https://example.com/homepage', // Required: The URL of the homepage\r\n  destinationUrl: 'https://example.com/destination', // Required: The URL to redirect to\r\n  srcParamValue: 'redirect', // Value for the 'src' query parameter\r\n  redirectCooldownDays: 7, // Cooldown period in days\r\n  cookieName: \"homepageTakeoverRedirected\", // Name of the cookie to store the redirect timestamp\r\n  buttonTextHTML: \"Go Back\", // Text for the button\r\n  buttonDesign: {\r\n    top: '1rem',\r\n    left: '1rem',\r\n    color: '#fff',\r\n    backgroundColor: '#007bff',\r\n    border: 'none',\r\n    borderRadius: '1rem',\r\n    padding: '0.5rem 1rem',\r\n  }\r\n});*/\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HomepageTakeover);\r\n\n\n//# sourceURL=webpack://main/./src/classes/HomepageTakeover.js?")},"./src/experiments/HomepageTakeover/default/homepageTakeover.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   "default": () => (/* binding */ main),\n/* harmony export */   variables: () => (/* binding */ variables)\n/* harmony export */ });\n/* harmony import */ var _classes_HomepageTakeover_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../classes/HomepageTakeover.js */ "./src/classes/HomepageTakeover.js");\n\r\n\r\nconst EXPERIMENT_VARIABLES = [\r\n    {\r\n        name: "Homepage URL",\r\n        mapsTo: "homepageUrl",\r\n        type: "text:url",\r\n        unit: null,\r\n        value: "https://nextafter.com/",\r\n        description: "The URL of the homepage where the redirect will occur.",\r\n    },\r\n    {\r\n        name: "Destination URL",\r\n        mapsTo: "destinationUrl",\r\n        type: "text:url",\r\n        unit: null,\r\n        value: "https://nextafter.com/",\r\n        description: "The URL to which the user will be redirected.",\r\n    },\r\n    {\r\n        name: "src Param Value",\r\n        mapsTo: "srcParamValue",\r\n        type: "text",\r\n        unit: null,\r\n        value: "redirect",\r\n        description: "The value of the src parameter to be added to the destination URL.",\r\n    },\r\n    {\r\n        name: "Redirect Cooldown Days",\r\n        mapsTo: "redirectCooldownDays",\r\n        type: "number",\r\n        unit: null,\r\n        value: 7,\r\n        description: "The number of days to wait before redirecting the user again.",\r\n    },\r\n    {\r\n        name: "Cookie Name",\r\n        mapsTo: "cookieName",\r\n        type: "text",\r\n        unit: null,\r\n        value: "homepageTakeoverRedirected",\r\n        description: "The name of the cookie to be set for the redirect.",\r\n    },\r\n    {\r\n        name: "Button Text HTML",\r\n        mapsTo: "buttonTextHTML",\r\n        type: "text:rich",\r\n        unit: null,\r\n        value: "Go Back",\r\n        description: "The text to be displayed on the back button on the redirected page.",\r\n    },\r\n    {\r\n        name: "Design",\r\n        mapsTo: "buttonDesign",\r\n        type: "group:collapsed",\r\n        items: [\r\n            {\r\n                group_index: 0,\r\n                name: "Button Position Top",\r\n                mapsTo: "design.top",\r\n                type: "text",\r\n                unit: "px",\r\n                value: 16,\r\n                // description: "The space from the top of the page to the button.",\r\n            },\r\n            {\r\n                group_index: 1,\r\n                name: "Button Position Left",\r\n                mapsTo: "design.left",\r\n                type: "text",\r\n                unit: "px",\r\n                value: 16,\r\n                // description: "The space from the left of the page to the button.",\r\n            },\r\n            {\r\n                group_index: 2,\r\n                name: "Button Background Color",\r\n                mapsTo: "design.backgroundColor",\r\n                type: "text:color",\r\n                unit: null,\r\n                value: "#000000",\r\n            },\r\n            {\r\n                group_index: 3,\r\n                name: "Button Text Color",\r\n                mapsTo: "design.color",\r\n                type: "text:color",\r\n                unit: null,\r\n                value: "#FFFFFF",\r\n            },\r\n            {\r\n                group_index: 4,\r\n                name: "Button Border Radius",\r\n                mapsTo: "design.borderRadius",\r\n                type: "number",\r\n                unit: "px",\r\n                value: 4,\r\n            },\r\n            {\r\n                group_index: 5,\r\n                name: "Button Padding",\r\n                mapsTo: "design.padding",\r\n                type: "text",\r\n                unit: null,\r\n                value: "8px 16px",\r\n            },\r\n        ],\r\n    }\r\n];\r\n\r\nfunction main (options) {\r\n    return new _classes_HomepageTakeover_js__WEBPACK_IMPORTED_MODULE_0__["default"](options);\r\n}\r\n\r\nfunction variables () {\r\n    return EXPERIMENT_VARIABLES;\r\n}\r\n\r\nfunction config () {\r\n    return _classes_HomepageTakeover_js__WEBPACK_IMPORTED_MODULE_0__["default"].defaultOptions;\r\n}\r\n\n\n//# sourceURL=webpack://main/./src/experiments/HomepageTakeover/default/homepageTakeover.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,r)=>{for(var n in r)__webpack_require__.o(r,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/experiments/HomepageTakeover/default/homepageTakeover.js");main=__webpack_exports__})();